import discord
from discord.ext import commands, tasks
import random
import asyncio
import json
import os
import datetime
from flask import Flask
from threading import Thread

app = Flask('')

@app.route('/')
def home():
    return "Bot is running!"

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()

intents = discord.Intents.default()
intents.message_content = True
intents.members = True
bot = commands.Bot(command_prefix='!', intents=intents)

DATA_FILE = 'balances.json'

if not os.path.exists(DATA_FILE):
    with open(DATA_FILE, 'w') as f:
        json.dump({}, f)

with open(DATA_FILE, 'r') as f:
    balances = json.load(f)

cooldowns = {
    'work': {},
    'daily': {},
    'rob': {}
}

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user}')

def save_balances():
    with open(DATA_FILE, 'w') as f:
        json.dump(balances, f)

@bot.command(name="—Ä–∞–±")
async def work(ctx):
    user_id = str(ctx.author.id)
    now = datetime.datetime.utcnow()
    last_work = cooldowns['work'].get(user_id)

    if last_work and (now - last_work).total_seconds() < 1800:
        remaining = datetime.timedelta(seconds=1800) - (now - last_work)
        mins, secs = divmod(int(remaining.total_seconds()), 60)
        await ctx.send(f"–ü–æ–¥–æ–∂–¥–∏ {mins} –º–∏–Ω—É—Ç –∏ {secs} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –∏–¥—Ç–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É.")
        return

    balances[user_id] = balances.get(user_id, 0) + 100
    cooldowns['work'][user_id] = now
    save_balances()
    await ctx.send("–¢—ã –æ—Ç—Ä–∞–±–æ—Ç–∞–ª —Å–º–µ–Ω—É –≤ –≥–µ–π –∫–ª—É–±–µ –∏ –ø–æ–ª—É—á–∏–ª 100 –¥–µ–Ω–µ–≥")

@bot.command(name="–Ω–∞–≥—Ä–∞–¥–∞")
async def daily(ctx):
    user_id = str(ctx.author.id)
    now = datetime.datetime.utcnow()
    last_daily = cooldowns['daily'].get(user_id)

    if last_daily and (now - last_daily).total_seconds() < 86400:
        remaining = datetime.timedelta(seconds=86400) - (now - last_daily)
        hrs, rem = divmod(int(remaining.total_seconds()), 3600)
        mins, secs = divmod(rem, 60)
        await ctx.send(f"–ü–æ–¥–æ–∂–¥–∏ {hrs} —á–∞—Å–æ–≤, {mins} –º–∏–Ω—É—Ç –∏ {secs} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –∑–∞–±—Ä–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—É —Ç—ã –∂–∏—Ä–Ω–∞—è –∂–æ–ø–∞")
        return

    balances[user_id] = balances.get(user_id, 0) + 1000
    cooldowns['daily'][user_id] = now
    save_balances()
    await ctx.send("—Ç—ã –∑–∞–±—Ä–∞–ª –Ω–∞–≥—Ä–∞–¥—É –≤ —Ä–∞–∑–º–µ—Ä–µ 1000 –¥–µ–Ω–µ–≥ –∑–∞ —Ç–æ —á—Ç–æ —Ç—ã —Å—É—â–µ—Å—Ç–≤—É–µ—à—å!")

@bot.command(name="–±–∞–ª")
async def balance(ctx, member: discord.Member = None):
    user = member or ctx.author
    user_id = str(user.id)
    bal = balances.get(user_id, 0)
    await ctx.send(f"—É {user.display_name} –Ω–∞ –±–∞–ª–∞–Ω—Å–µ {bal} –¥–µ–Ω–µ–≥")

@bot.command(name="—Å—ã–≥—Ä–∞—Ç—å")
async def gamble(ctx, amount: int):
    user_id = str(ctx.author.id)
    bal = balances.get(user_id, 0)

    if amount <= 0:
        await ctx.send("—á–µ –∫–æ–Ω—á–µ–Ω–Ω—ã–π —á—Ç–æ –ª–∏")
        return

    if bal < amount:
        await ctx.send("–Ω–µ—Ç—É —É —Ç–µ–±—è —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥")
        return

    if random.random() < 0.5:
        balances[user_id] += amount
        await ctx.send(f"—Ç—ã –ü–û–ë–ï–î–ò–õü§ëü§ëü´∞!!!! —Ç–µ–ø–µ—Ä—å —Ç–≤–æ–π –±–∞–ª–∞–Ω—Å: {balances[user_id]} ")
    else:
        balances[user_id] -= amount
        await ctx.send(f"—Ç—ã –ü–†–û–ï–ë–ê–õ–°–Øü´µüòÇ!! —Ç–µ–ø–µ—Ä—å —Ç–≤–æ–π –±–∞–ª–∞–Ω—Å: {balances[user_id]} ")

    save_balances()

@bot.command(name="–æ–≥—Ä–∞–±–∏—Ç—å")
async def rob(ctx, member: discord.Member):
    robber_id = str(ctx.author.id)
    target_id = str(member.id)
    now = datetime.datetime.utcnow()
    last_rob = cooldowns['rob'].get(robber_id)

    if last_rob and (now - last_rob).total_seconds() < 3600:
        remaining = datetime.timedelta(seconds=3600) - (now - last_rob)
        mins, secs = divmod(int(remaining.total_seconds()), 60)
        await ctx.send(f"–ü–æ–¥–æ–∂–¥–∏ {mins} –º–∏–Ω—É—Ç –∏ {secs} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –≥—Ä–∞–±–∏—Ç—å, —Ç—ã –µ–Ω–æ—Ç")
        return

    if target_id not in balances or balances[target_id] < 100:
        await ctx.send("—É –±–µ–¥–æ–ª–∞–≥–∏ –¥–∞–∂–µ –¥–µ–Ω–µ–≥ –Ω–µ—Ç—É –Ω–∞—Ö—É–π –≥—Ä–∞–±–∏—à—å")
        return

    success = random.random() < 0.5
    if success:
        stolen = int(balances[target_id] * random.uniform(0.10, 0.25))
        balances[robber_id] = balances.get(robber_id, 0) + stolen
        balances[target_id] -= stolen
        await ctx.send(f"—Ç—ã –£–°–ü–ï–®–ù–û –û–ì–†–ê–ë–ò–õüí∞üí∞ {member.display_name} –∏ –ø–æ–ª—É—á–∏–ª {stolen} –¥–µ–Ω–µ–≥!!")
    else:
        await ctx.send("—Ç—ã –ø—Ä–æ–µ–±–∞–ª—Å—è –∞—Ö–∞—Ö–∞—Ö–∞—Ö")

    cooldowns['rob'][robber_id] = now
    save_balances()

@bot.command(name="–ø–æ–∂–µ—Ä—Ç–≤")
async def tip(ctx, member: discord.Member, amount: int):
    sender_id = str(ctx.author.id)
    receiver_id = str(member.id)

    if balances.get(sender_id, 0) < amount or amount <= 0:
        await ctx.send("—Å—É–∫–∞ –∏–Ω–≤–∞–ª–∏–¥")
        return

    balances[sender_id] -= amount
    balances[receiver_id] = balances.get(receiver_id, 0) + amount
    save_balances()
    await ctx.send(f"{ctx.author.display_name} –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–ª {member.display_name} {amount} –¥–µ–Ω–µ–≥!")

@bot.command(name="–ª–±")
async def lb(ctx):
    top = sorted(balances.items(), key=lambda x: x[1], reverse=True)[:10]
    desc = ""
    for i, (user_id, bal) in enumerate(top, start=1):
        user = await bot.fetch_user(int(user_id))
        desc += f"{i}. {user.display_name}: {bal} –¥–µ–Ω–µ–≥\n"
    embed = discord.Embed(title="–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤", description=desc)
    await ctx.send(embed=embed)

@bot.command(name="–∫–æ–º–º–∞–Ω–¥—ã")
async def cmds(ctx):
    commands_list = (
        "!—Ä–∞–± - –ü—Ä–æ–ø–∞—Ö–∞—Ç—å –Ω–∞ —à–∞—Ö—Ç–∞—Ö –∏ –ø–æ–ª—É—á–∏—Ç—å 100 –±–∞–∫—Å–æ–≤\n"
        "!–Ω–∞–≥—Ä–∞–¥–∞ - –ó–∞–±–∏—Ä–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—É –≤ —Ä–∞–∑–º–µ—Ä–µ 1000 –¥–µ–Ω–µ–≥ –ø—Ä–æ—Å—Ç–æ –∑–∞ —Ç–æ —á—Ç–æ —Ç—ã –∂–∏–≤\n"
        "!–±–∞–ª–∞–Ω—Å [@user] - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–π –∏–ª–∏ —á—É–∂–æ–π –±–∞–ª–∞–Ω—Å\n"
        "!—Å—ã–≥—Ä–∞—Ç—å <amount> - –°–´–ì–†–ê–¢–¨ –í –ö–ê–ó–ò–ù–û –ü–†–û–î–ê–ô –ö–í–ê–†–¢–ò–†–£ –ò –°–´–ù–ê\n"
        "!–æ–≥—Ä–∞–±–∏—Ç—å @user - –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–ø–∏–∑–¥–∏—Ç—å –¥–µ–Ω–µ–≥ –Ω–∞ —Ö–∞–ª—è–≤—É\n"
        "!–ø–æ–∂–µ—Ä—Ç–≤ @user <amount> - –±—É–¥—å –¥–æ–±—Ä—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º –∏ –æ—Ç–¥–∞–π –¥–µ–Ω–µ–≥ –∫–æ–º—É —Ç–æ\n"
        "!–ª–± - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤\n"
        "!–≤—ã–¥–∞—Ç—å @user <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–Ω–µ–≥> - (—Ç–æ–ª—å–∫–æ –¥–ª—è –ª–æ—Å—Ç–∞ uwu) –¥–∞—Ç—å –¥–µ–Ω–µ–≥"
    )
    await ctx.send(f"Here are the available commands:\n\n{commands_list}")

@bot.command(name="–≤—ã–¥–∞—Ç—å")
async def give(ctx, target: discord.Member, amount: int):
    if str(ctx.author.id) != "669836907815108609":  # Replace with your actual Discord user ID
        await ctx.send("—Ä–∞–∑–º–µ—á—Ç–∞–ª—Å—è ü´µüòÇ")
        return
    balances[str(target.id)] = balances.get(str(target.id), 0) + amount
    save_balances()
    await ctx.send(f"–≤—ã–¥–∞–ª {amount} –¥–µ–Ω–µ–≥ –∫ {target.display_name} –Ω–∞ –±–∞–ª–∞–Ω—Å!")

keep_alive()
bot.run(os.getenv("TOKEN"))
